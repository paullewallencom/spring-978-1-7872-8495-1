buildscript {
	ext {
		springBootVersion = '2.1.0.M4'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url 'https://jitpack.io' }
}

ext {
    junitPlatformVersion = '1.2.0'
    testContainersVersion = '1.8.3'
    guavaVersion = '19.0'
	springDataR2dbcVersion = 'r2dbc-SNAPSHOT'
	r2dbcSpiVersion = '1.0.0.BUILD-SNAPSHOT'
	r2dbcPostgresqlVersion = '1.0.0.BUILD-SNAPSHOT'
	r2dbcClientlVersion = '1.0.0.BUILD-SNAPSHOT'
}
dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')

	// Magic happens here with Jitpack
	compile("com.github.spring-projects:spring-data-jdbc:${springDataR2dbcVersion}")
	compile("io.r2dbc:r2dbc-spi:${r2dbcSpiVersion}")
	compile("io.r2dbc:r2dbc-postgresql:${r2dbcPostgresqlVersion}")
	compile("io.r2dbc:r2dbc-client:${r2dbcClientlVersion}")

	compile("org.testcontainers:testcontainers:${testContainersVersion}")
	compile("org.testcontainers:postgresql:${testContainersVersion}")

	compileOnly('org.projectlombok:lombok')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')

	testCompile('org.junit.jupiter:junit-jupiter-api')
	testCompile('org.junit.jupiter:junit-jupiter-engine')
	testCompile("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
	testCompile("com.google.guava:guava:${guavaVersion}")
}


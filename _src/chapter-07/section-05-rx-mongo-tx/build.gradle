buildscript {
	ext {
		springBootVersion = '2.1.0.M4'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

ext {
    reactorExtraVersion = '3.2.0.RELEASE'
    junitPlatformVersion = '1.2.0'
	testContainersVersion = '1.8.3'
	guavaVersion = '19.0'
}

dependencies {
	compile('org.springframework.boot:spring-boot-autoconfigure')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	compile('org.springframework.boot:spring-boot-starter-actuator')

	compile("io.projectreactor.addons:reactor-extra:${reactorExtraVersion}")

	compileOnly('org.projectlombok:lombok')

	testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.junit.jupiter:junit-jupiter-api')
    testCompile('org.junit.jupiter:junit-jupiter-engine')
    testCompile("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
	testCompile("org.testcontainers:testcontainers:${testContainersVersion}")
	testCompile("com.google.guava:guava:${guavaVersion}")
	testCompileOnly('org.projectlombok:lombok')
}
